name: Use a loooong External Workflow

on:
  workflow_dispatch:

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set up Rclone
        uses: AnimMouse/setup-rclone@v1.9.0
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: Generate build matrix
        id: set-matrix
        run: |
            # Read the file and create a matrix object
            files=$(rclone lsf "o:tobedeleted/M" --files-only -R)
            matrix="["
            while read -r file; do
              matrix+="\"$file\", "
            done <<< "$files"
            matrix="${matrix::-2}]"  # Remove trailing comma and space
            echo "::set-output name=matrix::$matrix"
  
  build_1:
    needs: generate-matrix
    strategy:
        matrix:
            file: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Private Repository
        uses: actions/checkout@v4.1.5
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Cache APT packages
        uses: awalsh128/cache-apt-pkgs-action@v1.4.2
        with:
          packages: ffmpeg

      - name: Set up Rclone
        uses: AnimMouse/setup-rclone@v1.9.0
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: Run External Workflow
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          file: ${{ matrix.file }}
        run: |
          chmod +x script_4_1.sh
          ./script_4_1.sh

  build_2:
    needs: generate-matrix
    strategy:
        matrix:
            file: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Private Repository
        uses: actions/checkout@v4.1.5
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Cache APT packages
        uses: awalsh128/cache-apt-pkgs-action@v1.4.2
        with:
          packages: ffmpeg

      - name: Set up Rclone
        uses: AnimMouse/setup-rclone@v1.9.0
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: Run External Workflow
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          file: ${{ matrix.file }}
        run: |
          chmod +x script_4_2.sh
          ./script_4_2.sh

  build_3:
    needs: generate-matrix
    strategy:
        matrix:
            file: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Private Repository
        uses: actions/checkout@v4.1.5
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Cache APT packages
        uses: awalsh128/cache-apt-pkgs-action@v1.4.2
        with:
          packages: ffmpeg

      - name: Set up Rclone
        uses: AnimMouse/setup-rclone@v1.9.0
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: Run External Workflow
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          file: ${{ matrix.file }}
        run: |
          chmod +x script_4_3.sh
          ./script_4_3.sh

  build_4:
    needs: generate-matrix
    strategy:
        matrix:
            file: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Private Repository
        uses: actions/checkout@v4.1.5
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Cache APT packages
        uses: awalsh128/cache-apt-pkgs-action@v1.4.2
        with:
          packages: ffmpeg

      - name: Set up Rclone
        uses: AnimMouse/setup-rclone@v1.9.0
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: Run External Workflow
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          file: ${{ matrix.file }}
        run: |
          chmod +x script_4_4.sh
          ./script_4_4.sh

  merge:
    needs: [generate-matrix, build_1, build_2, build_3, build_4]
    strategy:
      matrix:
          file: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Private Repository
        uses: actions/checkout@v4.1.5
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Cache APT packages
        uses: awalsh128/cache-apt-pkgs-action@v1.4.2
        with:
          packages: ffmpeg

      - name: Set up Rclone
        uses: AnimMouse/setup-rclone@v1.9.0
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: Run External Workflow
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          file: ${{ matrix.file }}
        run: |
          chmod +x script_m_4.sh
          ./script_m_4.sh
